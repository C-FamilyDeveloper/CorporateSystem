services:
  corporate-system-auth-db:
    image: postgres
    container_name: corporate-system-auth-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth-db
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shared-network

  corporate-system-auth:
    container_name: corporate-system-auth
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5011:8091"
    depends_on:
      - corporate-system-auth-db
    networks:
      - shared-network
  
  corporate-system-auth-redis:
    container_name: corporate-system-auth-redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - shared-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      CLUSTER_ID: 6tM1x2tARl6qbOGLc8jujw
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - ./kafka-data:/var/lib/kafka/data
    networks:
      - shared-network
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--bootstrap-server", "kafka:9092" ]
      interval: 10s
      timeout: 5s
      retries: 3
      
volumes:
  postgres_data:
    
networks:
  shared-network:
    external: true